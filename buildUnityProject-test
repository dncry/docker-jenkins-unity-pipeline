pipeline {
    agent any

    parameters {
        persistentString(name: 'Version', defaultValue: '1.0.0', description: 'Version')
        persistentString(name: 'BundleVersionCode', defaultValue: '1', description: 'Bundle Version Code')
        persistentString(name: 'BuildPath', defaultValue: 'build/local_android', description: '生成路径')
        persistentBoolean(name: 'SeparateAsset', defaultValue: false, description: '是否分包')
        persistentBoolean(name: 'BuildAAB', defaultValue: false, description: 'Build AAB')
        persistentChoice(name: 'TargetPlatform', choices: ['Android', 'iOS'], description: '打包平台')
        persistentString(name: 'BuildMethod', defaultValue: 'WS.Auto.BuildWithCommandLine.AutoBuild', description: '打包函数')

        persistentString(name: 'GitPath', defaultValue: '',  description: 'Git地址')
        persistentString(name: 'GitBranch', defaultValue: 'main',  description: 'Git分支')
        persistentString(name: 'UnityImage', defaultValue: 'abc/unity:ubuntu-2022.3.18f1-android-3.0.1',  description: 'Unity Docker Image')

        persistentString(name: 'SdkPath', defaultValue: 'sdk-unity2020.3',  description: '自定义SdkPath')
        persistentString(name: 'NdkPath', defaultValue: 'ndk-unity2020.3',  description: '自定义NdkPath')
        persistentString(name: 'JdkPath', defaultValue: 'jdk-11.0.14',  description: '自定义JdkPath')
        persistentString(name: 'GradlePath', defaultValue: 'gradle-7.2',  description: '自定义GradlePath')

        persistentString(name: 'ShGitPath', defaultValue: 'http://192.168.50.83:3000/abc/docker-jenkins-unity-pipeline.git',  description: 'ShGit地址')
        persistentString(name: 'ShGitBranch', defaultValue: 'main',  description: 'ShGit分支')
        persistentString(name: 'ShPath', defaultValue: '/sh',  description: 'Sh路径')

        persistentBoolean(name: 'OnlyInit', defaultValue: true, description: '只初始化参数')
    }

    environment {
        BUILD_VERSION = "${params.Version}"
        BUILD_BUNDLECODE = "${params.BundleVersionCode}"
        BUILD_PATH = "${params.BuildPath}"
        BUILD_SEPARATEASSET =  "${params.SeparateAsset}"
        BUILD_BUILDAAB = "${params.BuildAAB}"
        BUILD_BUILDEXPORTPROJECT = 'true'
        BUILD_TARGET = "${params.TargetPlatform}"
        BUILD_METHOD = "${params.BuildMethod}"

        UNITY_ACTIVATION_FILE =  './unity3d.alf'
        IMAGE = "${params.UnityImage}"

        WORKSPACE_JENKINS = pwd()
        WORKSPACE_OS = "${JENKINS_HOME}/workspace/${FILE_NAME}"

        GRADLECACHE_OS = "${UNITY_HOME}/gradle"
        MAVENLOCAL_OS = "${UNITY_HOME}/.m2/repository"

        FILE_NAME = sh(script: "basename ${WORKSPACE_JENKINS}", returnStdout: true).trim()

        CI_DIR_OS = "${WORKSPACE_OS}/.sh"
        CI_DIR_JENKINS = "${WORKSPACE_JENKINS}/.sh"
        CI_DIR_UNITY = '/project/.sh'

        CI_DIR_OS_ShGit = "${WORKSPACE_OS}/.sh${params.ShPath}"
        CI_DIR_JENKINS_ShGit = "${WORKSPACE_JENKINS}/.sh${params.ShPath}"
        CI_DIR_UNITY_ShGit = "/project/.sh${params.ShPath}"

        Sdk_Path_OS = "${UNITY_HOME}/tools/sdk/${params.SdkPath}"
        Ndk_Path_OS = "${UNITY_HOME}/tools/ndk/${params.NdkPath}"
        Jdk_Path_OS = "${UNITY_HOME}/tools/jdk/${params.JdkPath}"
        Gradle_Path_OS = "${UNITY_HOME}/tools/gradle/${params.GradlePath}"

        Sdk_Path_UNITY =  '/tools/sdk'
        Ndk_Path_UNITY =  '/tools/ndk'
        Jdk_Path_UNITY =  '/tools/jdk'
        Gradle_Path_UNITY =  '/tools/gradle'

        BUILD_PATH_OS = "${WORKSPACE_OS}/${BUILD_PATH}/AndroidProject"
        BUILD_PATH_Jenkins = "${WORKSPACE_JENKINS}/${BUILD_PATH}"
    }

    stages {
        stage('Change Name') {
            steps {
                script {  

                    // 假设APK文件在BUILD_PATH/apk_output目录下  

                    def apkDirPath = "${env.BUILD_PATH}/"  

                    
                    // 使用sh步骤执行Shell命令来重命名文件  

                    sh """  

                        # 进入APK文件所在的目录  

                        cd ${apkDirPath}  
                        ls -la
                          

                        # 对目录下的每个apk文件执行重命名操作  

                        for file in *.gradle; do  

                            # 使用mv命令重命名文件，在文件名后添加"-1"  

                            mv \"\$file\" \"\${file%.*}-1.gradle\"  

                        done  

                    """  

  

                    echo '所有APK文件已重命名'  

                }  
            }
        }
    }
}
